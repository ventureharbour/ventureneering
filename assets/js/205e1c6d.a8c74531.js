"use strict";(self.webpackChunkVentureneering=self.webpackChunkVentureneering||[]).push([[973],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),y=u(r),f=o,m=y["".concat(s,".").concat(f)]||y[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},3172:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return c},toc:function(){return p},default:function(){return f}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={authors:"royletron",title:"\ud83e\udd3c\u200d\u2640\ufe0f Wrestly",description:"Wrestling with rest? Try Wrestly!",slug:"wrestly",tags:["libraries","oss"]},s=void 0,u={permalink:"/blog/wrestly",source:"@site/blog/2022-02-28-wrestly.md",title:"\ud83e\udd3c\u200d\u2640\ufe0f Wrestly",description:"Wrestling with rest? Try Wrestly!",date:"2022-02-28T00:00:00.000Z",formattedDate:"February 28, 2022",tags:[{label:"libraries",permalink:"/blog/tags/libraries"},{label:"oss",permalink:"/blog/tags/oss"}],readingTime:1.765,truncated:!0,authors:[{name:"Darren \ud83e\uddd9\u200d\u2642\ufe0f",title:"CTO @ Venture Harbour",url:"https://github.com/royletron",imageURL:"https://github.com/royletron.png",key:"royletron"}],frontMatter:{authors:"royletron",title:"\ud83e\udd3c\u200d\u2640\ufe0f Wrestly",description:"Wrestling with rest? Try Wrestly!",slug:"wrestly",tags:["libraries","oss"]},nextItem:{title:"\ud83e\udddb\u200d\u2642\ufe0f Von Count",permalink:"/blog/count-voncount"}},c={authorsImageUrls:[void 0]},p=[],y={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"This week we have been working with remote APIs, Webhooks and OAuth"),". Those alone will be blogged about plenty in the future, but in doing this task we have bourne another mini project that we have found really useful. Typically, when doing this sort of work, I've always had this habit of running a dummy server that logs out requests and blindly responds to them. This helps me see what is going on, and what external things are either redirecting or posting directly to our APIs. Up to now I have never really done much more than run a server where all requests are ",(0,a.kt)("inlineCode",{parentName:"p"},"console.log"),"'ed and ",(0,a.kt)("inlineCode",{parentName:"p"},"res.send('ok')"),"'ed, but this time around added an SQLite backed so I could see request history, and a nice front end so the payloads were readable. ",(0,a.kt)("a",{parentName:"p",href:"https://npmjs.com/wrestly"},"So here is ",(0,a.kt)("em",{parentName:"a"},"wrestly"))))}f.isMDXComponent=!0}}]);